# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
# https://github.com/MicrosoftDocs/pipelines-javascript/blob/master/azure-pipelines.yml
# by Daniel Hackbarth


pool:
  vmImage: 'Ubuntu 16.04'

variables:
    nodeDir: '$(Build.SourcesDirectory)/NodeApp'
    artifactDir: '$(Build.ArtifactStagingDirectory)'

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
    displayName: 'Install Node.js'

  - script: |
      npm install
      dir node_modules\\nyc
    displayName: 'npm install'
    workingDirectory: '$(nodeDir)'

  - powershell: |
      npm run coverage
      if ($LASTEXITCODE -eq 1) {
        Write-Output "The npm test has failed"
        "Failed" | Set-Content  "test.failed"
      }
    displayName: 'Run test'
    continueOnError: true
    ignoreLASTEXITCODE: true
    workingDirectory: '$(nodeDir)'
    
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '$(nodeDir)/test-results.xml'
      testRunTitle: 'Test results for JavaScript'

  - task: PublishCodeCoverageResults@1
    inputs: 
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(nodeDir)/coverage/*coverage.xml'
      reportDirectory: '$(nodeDir)/coverage'
      
  - powershell: |
      if (Test-Path test.failed) {
        Write-Error "Test failed"
      }
    displayName: 'Test Status'
    workingDirectory: '$(nodeDir)'

  - script: |
      docker build -t 'hacky1610/azurenodeapp:$(Build.BuildId)' .
      docker images
      docker login -u hacky1610 -p '$(hacky.docker.pwd)'
      docker push 'hacky1610/azurenodeapp:$(Build.BuildId)'
    displayName: 'Build docker'
    continueOnError: true
    condition: eq(variables['Deploy'], 'true')

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(nodeDir)' 
      artifactName: 'drop' 
      publishLocation: 'Container' # Options: container, filePath
      #targetPath: # Required when publishLocation == FilePath
      #parallel: false # Optional
      #parallelCount: # Optional
